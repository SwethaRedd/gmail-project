{"ast":null,"code":"import React,{useEffect}from\"react\";import\"./App.css\";import Header from\"./components/Header\";import Sidebar from\"./components/Sidebar\";import Mail from\"./components/Mail\";import{useDispatch,useSelector}from\"react-redux\";import EmailList from\"./components/EmailList\";import{BrowserRouter as Router,Switch,Route,Link}from\"react-router-dom\";import SendMail from\"./components/SendMail\";import{selectSendMessageIsOpen}from\"./features/mailSlice\";import{login,selectUser}from\"./features/userSlice\";import Login from\"./components/Login\";import{auth}from\"./firebase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var user=useSelector(selectUser);var sendMessageIsOpen=useSelector(selectSendMessageIsOpen);var dispatch=useDispatch();useEffect(function(){auth.onAuthStateChanged(function(user){if(user){//user is logged in\ndispatch(login({displayName:user.displayName,email:user.email,photoUrl:user.photoURL}));}});},[]);return/*#__PURE__*/_jsx(Router,{children:!user?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"app__body\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/mail\",children:/*#__PURE__*/_jsx(Mail,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(EmailList,{})})]})]}),sendMessageIsOpen&&/*#__PURE__*/_jsx(SendMail,{})]})});}export default App;","map":{"version":3,"sources":["/Users/rakesh/Desktop/geeksforgeeks/gmail-project/src/App.js"],"names":["React","useEffect","Header","Sidebar","Mail","useDispatch","useSelector","EmailList","BrowserRouter","Router","Switch","Route","Link","SendMail","selectSendMessageIsOpen","login","selectUser","Login","auth","App","user","sendMessageIsOpen","dispatch","onAuthStateChanged","displayName","email","photoUrl","photoURL"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,CAAiDC,IAAjD,KAA6D,kBAA7D,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,OAASC,uBAAT,KAAwC,sBAAxC,CACA,OAASC,KAAT,CAAgBC,UAAhB,KAAkC,sBAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,OAASC,IAAT,KAAqB,YAArB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,GAAMC,CAAAA,IAAI,CAAGd,WAAW,CAACU,UAAD,CAAxB,CACA,GAAMK,CAAAA,iBAAiB,CAAGf,WAAW,CAACQ,uBAAD,CAArC,CACA,GAAMQ,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEAJ,SAAS,CAAC,UAAM,CACdiB,IAAI,CAACK,kBAAL,CAAwB,SAACH,IAAD,CAAU,CAChC,GAAIA,IAAJ,CAAU,CACR;AACAE,QAAQ,CACNP,KAAK,CAAC,CACJS,WAAW,CAAEJ,IAAI,CAACI,WADd,CAEJC,KAAK,CAAEL,IAAI,CAACK,KAFR,CAGJC,QAAQ,CAAEN,IAAI,CAACO,QAHX,CAAD,CADC,CAAR,CAOD,CACF,CAXD,EAYD,CAbQ,CAaN,EAbM,CAAT,CAcA,mBACE,KAAC,MAAD,WACG,CAACP,IAAD,cACC,KAAC,KAAD,IADD,cAGC,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,MAAD,IADF,cAEE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,OAAD,IADF,cAEE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,uBACE,KAAC,IAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,KAAC,SAAD,IADF,EAJF,GAFF,GAFF,CAaGC,iBAAiB,eAAI,KAAC,QAAD,IAbxB,GAJJ,EADF,CAuBD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Mail from \"./components/Mail\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport EmailList from \"./components/EmailList\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport SendMail from \"./components/SendMail\";\r\nimport { selectSendMessageIsOpen } from \"./features/mailSlice\";\r\nimport { login, selectUser } from \"./features/userSlice\";\r\nimport Login from \"./components/Login\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        //user is logged in\r\n        dispatch(\r\n          login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoUrl: user.photoURL,\r\n          })\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app\">\r\n          <Header />\r\n          <div className=\"app__body\">\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path=\"/mail\">\r\n                <Mail />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <EmailList />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n          {sendMessageIsOpen && <SendMail />}\r\n        </div>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}